@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthApiService AuthApiService
@inject SecureStorageService SecureStorageService

@if (isAuth)
{
    <UserLayout OnLogout="Logout"></UserLayout>
}
else
{
    <LoginSignup OnLogin="Login"></LoginSignup>
}


@code{
    private bool isAuth { get; set; }

    protected async override Task OnInitializedAsync()
    {
        string? token = await SecureStorageService.GetTokenAsync();
        if (string.IsNullOrEmpty(token))
        {
            isAuth = false;
            SecureStorageService.RemoveToken();
        }
        else isAuth = true;
    }

    public void Logout()
    {
        SecureStorageService.RemoveToken();
        isAuth = false;
        StateHasChanged();
    }

    public async Task Login(string token)
    {
        await SecureStorageService.SaveTokenAsync(token);
        isAuth = true;
		await InvokeAsync(StateHasChanged);
    }
}