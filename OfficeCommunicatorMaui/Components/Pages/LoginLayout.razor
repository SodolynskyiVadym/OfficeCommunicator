@inject AuthApiService AuthApiService
@inject NavigationManager NavigationManager

<input type="text" placeholder="Username" @bind="email"/>
<input type="password" placeholder="Password" @bind="password"/>
<p>@errorMessage</p>
<p>@token</p>
<button @onclick="Login">Login</button>


@code {
    [Parameter]
    public EventCallback<string> OnLogin { get; set; }

    private string email { get; set; } = string.Empty;
    private string password { get; set; } = string.Empty;
    private string? token { get; set; } = string.Empty;
    private string errorMessage { get; set; } = string.Empty;

    private async Task Login()
    {
        try
        {
            token = await AuthApiService.LoginAsync(email, password);
            if (!string.IsNullOrEmpty(token))
            {
                await SecureStorageService.SaveTokenAsync(token);
				await OnLogin.InvokeAsync(token);
            }
            else throw new Exception("Invalid login");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
