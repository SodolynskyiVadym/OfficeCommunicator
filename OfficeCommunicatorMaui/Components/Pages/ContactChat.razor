@inject ContactApiService ContactApiService

<h1>@Contact.AssociatedUser.Name</h1>

@foreach(var message in Contact.Chat.Messages)
{
	<h4>@message.Content</h4>
}

<input type="text" @bind="Message" />
<button @onclick="SendMessage">Send</button>

@code {
	[Parameter]
	public Contact Contact { get; set; }

	[Parameter]
	public int UserId { get; set; }

	[Parameter]
	public EventCallback<MessageSecretStorageModel> OnSendMessage { get; set; }

	private string Message { get; set; } = string.Empty;

	protected override void OnInitialized()
	{
		Contact.Chat.Messages = Contact.Chat.Messages.OrderByDescending(m => m.Date).ToList();
	}

	private async Task SendMessage()
	{
		Contact.Chat.Messages.Add(new Message()
		{
			Content = Message,
			UserId = UserId,
			ChatId = Contact.ChatId,
			Date = DateTime.Now
		});
		await OnSendMessage.InvokeAsync(new MessageSecretStorageModel(UserId, Contact.ChatId, Message, nameof(Contact)));
		Message = string.Empty;
	}
}
